// Generated by data binding compiler. Do not edit!
package com.iqonic.woobox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.iqonic.woobox.R;
import com.iqonic.woobox.base.BaseRecyclerAdapter;
import com.iqonic.woobox.models.MyOrderData;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemOrderBinding extends ViewDataBinding {
  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final RelativeLayout rlContent;

  @NonNull
  public final TextView tvOriginalPrice;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvSeller;

  @NonNull
  public final TextView tvTotalItem;

  @Bindable
  protected MyOrderData.LineItem mModel;

  @Bindable
  protected BaseRecyclerAdapter.OnClickListener mCallback;

  protected ItemOrderBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView ivProduct, RelativeLayout rlContent, TextView tvOriginalPrice, TextView tvPrice,
      TextView tvProductName, TextView tvSeller, TextView tvTotalItem) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivProduct = ivProduct;
    this.rlContent = rlContent;
    this.tvOriginalPrice = tvOriginalPrice;
    this.tvPrice = tvPrice;
    this.tvProductName = tvProductName;
    this.tvSeller = tvSeller;
    this.tvTotalItem = tvTotalItem;
  }

  public abstract void setModel(@Nullable MyOrderData.LineItem model);

  @Nullable
  public MyOrderData.LineItem getModel() {
    return mModel;
  }

  public abstract void setCallback(@Nullable BaseRecyclerAdapter.OnClickListener callback);

  @Nullable
  public BaseRecyclerAdapter.OnClickListener getCallback() {
    return mCallback;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_order, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemOrderBinding>inflateInternal(inflater, R.layout.item_order, root, attachToRoot, component);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_order, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemOrderBinding>inflateInternal(inflater, R.layout.item_order, null, false, component);
  }

  public static ItemOrderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemOrderBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemOrderBinding)bind(component, view, R.layout.item_order);
  }
}
